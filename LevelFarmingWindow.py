# Form implementation generated from reading ui file 'LevelFarming.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


import httpimport
import multiprocessing
from PyQt6 import QtCore, QtGui, QtWidgets
import time

from thread_workers import *

level_process = None
window = None


class CheckProcess(QRunnable):
    signal = WorkerSignal()

    @pyqtSlot()
    def run(self):
        global level_process
        while level_process.is_alive():
            time.sleep(0.1)
        self.signal.finished.emit()


class Ui_LevelFarming(object):
    def setupUi(self, LevelFarmingWindow):
        global window
        LevelFarmingWindow.setFixedSize(800, 600)
        LevelFarmingWindow.setWindowTitle("PokemonUI")
        LevelFarmingWindow.setStyleSheet("background-color: black;")
        window = LevelFarmingWindow
        self.centralwidget = QtWidgets.QWidget(parent=LevelFarmingWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.title = QtWidgets.QLabel(parent=self.centralwidget)
        self.title.setStyleSheet("color: #cccccc;")
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT")
        font.setPointSize(26)
        self.title.setFont(font)
        self.title.setText("Level Farming")
        self.title.adjustSize()
        self.title.move(LevelFarmingWindow.width() // 2 - self.title.width() // 2,
                        LevelFarmingWindow.height() // 4 - self.title.height())
        self.sweetScentInput = QtWidgets.QLineEdit(parent=self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT")
        font.setPointSize(12)
        self.sweetScentInput.setFont(font)
        self.sweetScentInput.setStyleSheet("background-color: white;")
        self.sweetScentInput.setGeometry(QtCore.QRect(LevelFarmingWindow.width() // 2 - 170 // 2,
                                                      LevelFarmingWindow.height() // 2 - 20, 170, 40))
        self.sweetScentInput.setObjectName("sweetScentInput")
        self.sweetScentInput.setPlaceholderText("How many sweet scents")
        self.start_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.start_button.setStyleSheet("color: black; background-color: grey;")
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT")
        font.setPointSize(14)
        self.start_button.setFont(font)
        self.start_button.setGeometry(QtCore.QRect(LevelFarmingWindow.width() // 2 - 60,
                                                   LevelFarmingWindow.height() * 3 // 4 - 45 // 2, 120, 45))
        self.start_button.setText("Start")
        self.stop_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.stop_button.setStyleSheet("color: black; background-color: grey;")
        self.stop_button.setFont(font)
        self.stop_button.setGeometry(QtCore.QRect(LevelFarmingWindow.width() // 2 - 60,
                                                  LevelFarmingWindow.height() * 3 // 4 - 45 // 2, 120, 45))
        self.stop_button.setText("Stop")
        self.stop_button.hide()
        self.backBtn = QtWidgets.QPushButton(self.centralwidget)
        self.backBtn.setGeometry(QtCore.QRect(0, 0, 70, 30))
        self.backBtn.setText("Esc")
        self.backBtn.setStyleSheet("color: black; background-color: grey;")
        self.backBtn.setFont(font)
        self.is_running = QtWidgets.QLabel(parent=self.centralwidget)
        self.is_running.setStyleSheet("color: #cccccc;")
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT")
        font.setPointSize(18)
        self.is_running.setFont(font)
        self.is_running.hide()
        self.is_running.setText("Running...")
        self.is_running.adjustSize()
        self.is_running.move(LevelFarmingWindow.width() // 2 - self.is_running.width() // 2,
                             LevelFarmingWindow.height() * 2 // 3 - self.is_running.height())
        LevelFarmingWindow.setCentralWidget(self.centralwidget)
        self.threadpool = QThreadPool()

        QtCore.QMetaObject.connectSlotsByName(LevelFarmingWindow)

        self.sweetScentInput.returnPressed.connect(self.run_level_farming)

        self.start_button.clicked.connect(self.run_level_farming)
        self.start_button.setAutoDefault(True)

        self.stop_button.clicked.connect(self.stop_level_farming)
        self.stop_button.setAutoDefault(True)

        self.backBtn.setShortcut("Esc")
        self.backBtn.clicked.connect(self.open_PokemonUI)
        self.backBtn.clicked.connect(self.stop_level_farming)
        self.backBtn.clicked.connect(LevelFarmingWindow.close)
        self.backBtn.setAutoDefault(True)


    def run_level_farming(self):
        global level_process, window
        if self.sweetScentInput.text() != "":
            level_process = multiprocessing.Process(target=run_script,
                                                    args=[self.sweetScentInput.text()])
            level_process.daemon = True
            level_process.start()

            is_alive_worker = CheckProcess()
            is_alive_worker.signal.finished.connect(self.hide_status)
            self.threadpool.start(is_alive_worker)

            self.start_button.hide()
            self.stop_button.show()
            self.is_running.show()

    def stop_level_farming(self):
        global level_process
        if level_process is not None and level_process.is_alive():
            level_process.terminate()

    def hide_status(self):
        self.is_running.hide()
        self.stop_button.hide()
        self.start_button.show()


    def open_PokemonUI(self):
        self.temp_window = QtWidgets.QMainWindow()
        from PokemonUI import Ui_PokemonUI
        self.ui = Ui_PokemonUI()
        self.ui.setupUi(self.temp_window)
        self.temp_window.show()


def run_script(n):
    with httpimport.github_repo(username='T3tsuo', repo='LevelFarming', ref='main'):
        import LevelFarming
    LevelFarming.run(n)
